<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>重构 on 码艺术</title>
    <link>https://yunteng9345.github.io/tags/%E9%87%8D%E6%9E%84/</link>
    <description>Recent content in 重构 on 码艺术</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 23 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yunteng9345.github.io/tags/%E9%87%8D%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>《重构第二版》笔记</title>
      <link>https://yunteng9345.github.io/p/%E9%87%8D%E6%9E%84%E7%AC%AC%E4%BA%8C%E7%89%88%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yunteng9345.github.io/p/%E9%87%8D%E6%9E%84%E7%AC%AC%E4%BA%8C%E7%89%88%E7%AC%94%E8%AE%B0/</guid>
      <description>思想  需求的变化使重构变得必要
重构就是以微小的步伐修改程序，如果有问题，可立马发现
傻瓜都能写出计算机可以理解的代码，唯有能写出人类容易理解的代码，才是优秀的程序员
 步骤  重构前，检查自己是否有一套可靠的测试集，这些测试必须有自我检验的能力（单元测试） 把复杂的代码分解为更小的单元  细节  将函数分割为单一功能，提炼到外部提供调用 改动完成之后，立马编译执行一遍单元测试，原因：在真的犯了错误时：只需要考虑一个很小的改动范围，使得排查与修复问题易如反掌。 变量改名，使它们更加简洁 处理结果变量时，将循环代码和变量放在一起，然后用查询函数取代临时变量 利用多态取代条件表达式  </description>
    </item>
    
  </channel>
</rss>
