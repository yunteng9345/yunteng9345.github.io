[{"content":"何为线程？  线程（thread）是操作系统能够进行运算调度的最小单位。它被包含在进程之中，是进程中的实际运作单位。一条线程指的是进程中一个单一顺序的控制流，一个进程中可以并发多个线程，每条线程并行执行不同的任务。\n Java线程的生命周期  Java线程的生命周期——码艺术 \n 新建（New）：刚使用new方法，new出来的线程。 就绪（Runnable）：调用的线程的start()方法后，这时候线程处于等待CPU分配资源阶段，谁先抢的CPU资源，谁开始执行。 运行（Running）：当就绪的线程被调度并获得CPU的资源时，便进入了运行状态，run方法定义了线程的功能。 阻塞（Blocked）：在运行状态的时候，可能因为某些原因导致运行状态的线程进入了阻塞状态，比如sleep()、wait()之后线程就变为阻塞状态，这个时候需要有其他机制将阻塞状态的线程唤醒，比如调用notify()或者notifyAll()方法，唤醒的线程不会立即执行run()方法，而是进入就绪状态（Runnable）状态，再次等待CPU分配资源进入运行状态。 销毁（Terminated）：如果线程正常执行完成后或线程被提前强制性终止、出现异常导致结束，那么线程就要被销毁并释放资源。  ","date":"2021-08-23T00:00:00Z","permalink":"https://yunteng9345.github.io/p/java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AF%A6%E8%A7%A3/","title":"Java多线程详解"}]